digraph "OpponentModelling::CTerranNN"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{OpponentModelling::\lCTerranNN\n||+ CTerranNN()\l+ init()\l+ saveNeuralNetwork()\l+ loadNeuralNetwork()\l+ createNN()\l+ getName()\l- createNN()\l- getOutputV()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{OpponentModelling::\lCNeuralNetworkModel\n|# net\l# fileHandler\l# created\l# numOfLayers\l# numOfNeurons\l- predictedOppModel\l- optimizerForNN\l- batch_size\l- epochs\l|+ CNeuralNetworkModel()\l+ ~CNeuralNetworkModel()\l+ init()\l+ testNN()\l+ predictOpponetGameState()\l+ trainNN()\l+ createNN()\l+ setNumOfEpochs()\l+ setBatchSize()\l+ getNumOfLayers()\l+ getNeuronsNumberEachLayer()\l+ getName()\l+ createNameFile()\l+ setlearningRate()\l# getOutputV()\l# createNN()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classOpponentModelling_1_1CNeuralNetworkModel.html",tooltip="Class representing model of neural network. It has all necessary information stored for the proper ru..."];
}
